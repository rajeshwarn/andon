//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace netTcpLogisticApplication.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILogistic")]
    public interface ILogistic {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogistic/GetLogisticRequests", ReplyAction="http://tempuri.org/ILogistic/GetLogisticRequestsResponse")]
        LogisticService.LogistRequestElem[] GetLogisticRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogistic/GetLogisticTails", ReplyAction="http://tempuri.org/ILogistic/GetLogisticTailsResponse")]
        LogisticService.LogistTailElem[] GetLogisticTails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogistic/GetBatchesOnLine", ReplyAction="http://tempuri.org/ILogistic/GetBatchesOnLineResponse")]
        LogisticService.LogistBatch[] GetBatchesOnLine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogistic/GetLogisticInfo", ReplyAction="http://tempuri.org/ILogistic/GetLogisticInfoResponse")]
        LogisticService.LogisticInfo GetLogisticInfo();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogisticChannel : netTcpLogisticApplication.ServiceReference1.ILogistic, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogisticClient : System.ServiceModel.ClientBase<netTcpLogisticApplication.ServiceReference1.ILogistic>, netTcpLogisticApplication.ServiceReference1.ILogistic {
        
        public LogisticClient() {
        }
        
        public LogisticClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogisticClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogisticClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogisticClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LogisticService.LogistRequestElem[] GetLogisticRequests() {
            return base.Channel.GetLogisticRequests();
        }
        
        public LogisticService.LogistTailElem[] GetLogisticTails() {
            return base.Channel.GetLogisticTails();
        }
        
        public LogisticService.LogistBatch[] GetBatchesOnLine() {
            return base.Channel.GetBatchesOnLine();
        }
        
        public LogisticService.LogisticInfo GetLogisticInfo() {
            return base.Channel.GetLogisticInfo();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ILogisticCollector")]
    public interface ILogisticCollector {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogisticCollector/RenewBatchesOnLine", ReplyAction="http://tempuri.org/ILogisticCollector/RenewBatchesOnLineResponse")]
        void RenewBatchesOnLine(LogisticService.LogistBatch[] lineBatches);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogisticCollector/RenewNextBatch", ReplyAction="http://tempuri.org/ILogisticCollector/RenewNextBatchResponse")]
        void RenewNextBatch(LogisticService.LogisticInfo info);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogisticCollectorChannel : netTcpLogisticApplication.ServiceReference1.ILogisticCollector, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogisticCollectorClient : System.ServiceModel.ClientBase<netTcpLogisticApplication.ServiceReference1.ILogisticCollector>, netTcpLogisticApplication.ServiceReference1.ILogisticCollector {
        
        public LogisticCollectorClient() {
        }
        
        public LogisticCollectorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogisticCollectorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogisticCollectorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogisticCollectorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RenewBatchesOnLine(LogisticService.LogistBatch[] lineBatches) {
            base.Channel.RenewBatchesOnLine(lineBatches);
        }
        
        public void RenewNextBatch(LogisticService.LogisticInfo info) {
            base.Channel.RenewNextBatch(info);
        }
    }
}
